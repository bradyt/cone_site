{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"cone A mobile ledger-like. Project's source code The source is available at https://github.com/bradyt/cone . There is a cone_android/ directory where the Flutter code for the Android app is. The cone_lib/ directory contains Dart library code that could potentially be used for each of mobile apps, cli app, and maybe even web and desktop apps. There is also a uri_picker/ directory, which contains a Flutter plugin for linking a file to the Android cone app. We'll attempt to extend that plugin to an iOS app. Not certain what will happen for web or desktop yet. Run the app from source First, make sure to install Flutter . After that, you can run the app from the cone_android/ directory. Replace flutter run with flutter run --flavor=dev . See https://github.com/flutter/flutter/issues/22856 . Donate paypal: https://www.paypal.me/bradytrainor bitcoin: 3AVZKz1EFhKzU2wuqZmJzjercKBakRmpAR ethereum: 0x1c99F2E13B9BC204a70dbc8Add54b37Efdf24516","title":"README"},{"location":"#cone","text":"A mobile ledger-like.","title":"cone"},{"location":"#projects-source-code","text":"The source is available at https://github.com/bradyt/cone . There is a cone_android/ directory where the Flutter code for the Android app is. The cone_lib/ directory contains Dart library code that could potentially be used for each of mobile apps, cli app, and maybe even web and desktop apps. There is also a uri_picker/ directory, which contains a Flutter plugin for linking a file to the Android cone app. We'll attempt to extend that plugin to an iOS app. Not certain what will happen for web or desktop yet.","title":"Project's source code"},{"location":"#run-the-app-from-source","text":"First, make sure to install Flutter . After that, you can run the app from the cone_android/ directory. Replace flutter run with flutter run --flavor=dev . See https://github.com/flutter/flutter/issues/22856 .","title":"Run the app from source"},{"location":"#donate","text":"paypal: https://www.paypal.me/bradytrainor bitcoin: 3AVZKz1EFhKzU2wuqZmJzjercKBakRmpAR ethereum: 0x1c99F2E13B9BC204a70dbc8Add54b37Efdf24516","title":"Donate"},{"location":"wiki/Graphs/","text":"pub global activate dcdg dcdg --package ../cone > cone.uml brew install plantuml plantuml -tlatex cone.uml # pdflatex (e.g., MacTeX) pdflatex cone.pdf","title":"Graphs"},{"location":"wiki/Home/","text":"Welcome to the wiki for the cone app. Currently there are TODOs listed at TODOs . Notes on setting up an environment for contributing are at SETUP . Collecting diagrams to visualize the project at Graphs . Similar apps Mobile ledgers . A script for localizations: Localizations . A draft of some notes is at Notes .","title":"Home"},{"location":"wiki/Localizations/","text":"Quick script to add a few languages via simple google translate. import 'package:translator/translator.dart'; main(List<String> arguments) async { final translator = GoogleTranslator(); final locales = [ 'de', 'hi', 'in', 'it', 'ja', 'fr', 'th', 'tl', 'zh', ]; var values = <String, String>{ 'addTransaction': 'Add transaction', 'currencyOnLeft': 'Currency on left', 'defaultCurrency': 'Default Currency', 'enterDefaultCurrency': 'Enter default currency', 'ledgerFile': 'Ledger file', 'settings': 'Settings', 'submit': 'Submit', }; Future<String> getForLanguage(String targetLocale) async { String result = '\\'$targetLocale\\': <String, String>{\\n'; for (MapEntry entry in values.entries) { result += ' \\'${entry.key}\\': \\''; result += await translator.translate(entry.value, from: 'en', to: targetLocale); result += '\\',\\n'; } result += '},'; return result; } for (String locale in locales) { print(await getForLanguage(locale)); } }","title":"Localizations"},{"location":"wiki/Mobile-ledgers/","text":"The ecosystem of mobile-friendly plain text ledger apps is very young. Here are some of the projects pushing forward in this frontier. (Similar lists are kept at https://plaintextaccounting.org/#ui-mobile and https://hledger.org/mobile-apps.html .) Beancount Ionic Status: \"This project is currently NOT ready for end-user use!\" Source: https://gitlab.com/alex_ford/beancount-ionic Made with: Typescript , Wikipedia Angular , Wikipedia Ionic , Wikipedia Beancount Mobile Permissions: Read and write to external storage Google Play: https://play.google.com/store/apps/details?id=link.beancount.mobile Source: https://github.com/xuhcc/beancount-mobile Made with: Typescript , Wikipedia Angular , Wikipedia NativeScript , Wikipedia Cashier PWA: https://cashier.alensiljak.eu.org/favourites Source: https://gitlab.com/alensiljak/cashier Made with: Javascript Vue , Wikipedia cone Permissions: None F-Droid: https://f-droid.org/packages/info.tangential.cone/ Google Play: https://play.google.com/store/apps/details?id=info.tangential.cone Website: https://cone.tangential.info Source: https://github.com/bradyt/cone/ Made with: Dart , Wikipedia Flutter , Wikipedia Ledger Expense Tracking Status: \"This app is in development. It may be unstable.\" Google Play: https://play.google.com/store/apps/details?id=com.mpease.ledger Source: https://github.com/jduepmeier/ledger-app Made with: Java Android SDK , Wikipedia MoLe Status: \"MoLe is known to work with hledger-web versions 1.10 and 1.14.\" Permissions: Internet F-Droid: https://f-droid.org/en/packages/net.ktnx.mobileledger/ Website: https://mole.ktnx.net Made with: Java Android SDK , Wikipedia","title":"Mobile ledgers"},{"location":"wiki/Notes/","text":"These are partial and random notes. I've yet to establish a coherent summary of what the topic will be, despite several attempts. So for now, here you are. Links ledger-cli Google Groups Ledger and the accountancy equation Confusion about a few things New option for Debit/Credit reports: --dc money.stackexchange.com What is the Equity account for in GnuCash In double entry accounting, how does income become equity? beancount docs Types of Accounts Equity Chart of Accounts Credits & Debits Plain Text Accounting ledger docs Stating where money goes hledger docs hledger accounting links Rambaud et al., Algebraic Models for Accounting Systems Ellerman, On Double-Entry Bookkeeping: The Mathematical Treatment GnuCash docs static accounting equation (dynamic) accounting equation rearranged accounting equation Wikipedia Accounting equation Retained earnings Debits and Credits Some frequently encountered conventions in plain text accounting Top level accounts assets liabilities equity income expenses Transactions must balance A typical transaction in ledger might be, 2000-01-01 an example transaction expenses:gas 10 USD assets:cash -10 USD Ledger convention is for transactions to balance, for example in the previous, 10 + (-10) = 0 , so the postings balance. In fact, this is enforced. If we try to write the following to our ledger file, 2000-01-01 an example transaction expenses:gas 10 USD assets:cash -3 USD Then ledger will emit the following error message, \u200b> 2000-01-01 an example transaction \u200b> expenses:gas 10 USD \u200b> assets:cash -3 USD Unbalanced remainder is: 7 USD Amount to balance against: 10 USD Error: Transaction does not balance Corollary, an accounting equation With the above top level accounts, and the fact that transactions must balance, this implies the following equation will hold. \\text{assets} + \\text{liabilites} + \\text{equity} + \\text{income} + \\text{expenses} = 0. Signed numbers versus debit/credit The notation chosen for plain text accounting uses signed numbers, rather than requiring the notion of debits and credits. I think we can borrow terminology from Ellerman, where they refer to the two systems as SSS and DSU. That is, single-sided accounts with signed numbers, versus double-sided accounts with unsigned numbers. So if plain text accounting had used DSU, we might have written the above transaction instead as, 2000-01-01 an example transaction debits credits expenses:gas 10 USD assets:cash 10 USD We hope you agree that the SSS version is preferable, and natural to use. If you are trying to translate between an SSS amount or account, and debit/credit terminology, a mnemonic might be as simple as \"debit is positive, credit is negative\". Note that we are implicitly flipping the sign on credit accounts, that is, liabilities, equity and income will typically have negative balances in plain text accounting. Consider that GnuCash docs provide the DSU variant of our accounting equation above, reproduced here. \\text{Assets} + \\text{Expenses} = \\text{Liabilites} + \\text{Equity} + \\text{Income}. Equity and net income There appears to be a discrepancy. Wikipedia writes the accounting equation as, \\text{Assets} = \\text{Liabilites} + \\text{Equity}. So why do our accounting equations above have two extra terms, income and expenses? Wikipedia even writes the following equations, \\begin{align*} \\text{Owner's equity} &= \\text{Contributed Capital} + \\text{Retained Earnings}, \\\\ \\text{Retained Earnings} &= \\text{Net Income} \u2212 \\text{Dividends, and} \\\\ \\text{Net Income} &= \\text{Income} \u2212 \\text{Expenses} \\end{align*} This suggests that income and expenses should be subaccounts to equity. So why do we have them as top-level accounts, or siblings to the equity account? Perhaps this quote from Wikpedia leads us to a possible viewpoint. At the end of that period, the net income (or net loss) at that point is transferred from the Profit and Loss Account to the retained earnings account. Rambaud et al. briefly share an example with this partition of accounts, for equity accounts, permanent accounts, and temporary accounts. A = A_e \\cup A_p \\cup A_t. Then further subdividing temporary accounts into revenue and expenses, A = A_e \\cup A_p \\cup A_{tr} \\cup A_{te}. They go on to suggest \"that the temporary accounts are to be closed and their balances combined and added to the retained earnings account.\" This notion that the top-level, current income and expense accounts are \"temporary\", is repeated in a few more of the links above. The equity is what we expect, every time we close the books. This seems to solve the apparent discrepancy. Wikipedia's version of accounting equation is true again, any time the top-level income and expense accounts are zeroed out. Zeroing out net income Let's see how we might do this in text accounting, with an example. Suppose in January, you have the following transactions. 2000-01-01 paycheck assets:checking 10 USD income:employer -10 USD 2000-01-01 rent expenses:rent 5 USD assets:checking -5 USD At the end of January, you might close the books by adding the following transaction, to move profits and losses to retained earnings. 2000-01-31 close 2000-01 income:employer 10 USD expenses:rent -5 USD equity:retained earnings -5 USD Now we can check our balances again. > ledger balance 5 USD assets:checking -5 USD equity:retained earnings -------------------- 0 By closing the books, we have restored the usual accounting equation. That is, for our SSS system in plain text accounting, the following equation is true again. \\text{assets} + \\text{liabilities} + \\text{equity} = 0. Plain text accounting closing To be continued... (Maybe, plain text accountants don't need the exact same notion of closing books. But I'd like to continue writing this article at a later date, so I will stop my research here, and deploy the article as is for now.) Notes to improve page: Try ledger equity '(income|expenses)' to improve previous section Reseach docs, commits, issue history, for equity/close command","title":"Notes"},{"location":"wiki/Notes/#links","text":"ledger-cli Google Groups Ledger and the accountancy equation Confusion about a few things New option for Debit/Credit reports: --dc money.stackexchange.com What is the Equity account for in GnuCash In double entry accounting, how does income become equity? beancount docs Types of Accounts Equity Chart of Accounts Credits & Debits Plain Text Accounting ledger docs Stating where money goes hledger docs hledger accounting links Rambaud et al., Algebraic Models for Accounting Systems Ellerman, On Double-Entry Bookkeeping: The Mathematical Treatment GnuCash docs static accounting equation (dynamic) accounting equation rearranged accounting equation Wikipedia Accounting equation Retained earnings Debits and Credits","title":"Links"},{"location":"wiki/Notes/#some-frequently-encountered-conventions-in-plain-text-accounting","text":"","title":"Some frequently encountered conventions in plain text accounting"},{"location":"wiki/Notes/#top-level-accounts","text":"assets liabilities equity income expenses","title":"Top level accounts"},{"location":"wiki/Notes/#transactions-must-balance","text":"A typical transaction in ledger might be, 2000-01-01 an example transaction expenses:gas 10 USD assets:cash -10 USD Ledger convention is for transactions to balance, for example in the previous, 10 + (-10) = 0 , so the postings balance. In fact, this is enforced. If we try to write the following to our ledger file, 2000-01-01 an example transaction expenses:gas 10 USD assets:cash -3 USD Then ledger will emit the following error message, \u200b> 2000-01-01 an example transaction \u200b> expenses:gas 10 USD \u200b> assets:cash -3 USD Unbalanced remainder is: 7 USD Amount to balance against: 10 USD Error: Transaction does not balance","title":"Transactions must balance"},{"location":"wiki/Notes/#corollary-an-accounting-equation","text":"With the above top level accounts, and the fact that transactions must balance, this implies the following equation will hold. \\text{assets} + \\text{liabilites} + \\text{equity} + \\text{income} + \\text{expenses} = 0.","title":"Corollary, an accounting equation"},{"location":"wiki/Notes/#signed-numbers-versus-debitcredit","text":"The notation chosen for plain text accounting uses signed numbers, rather than requiring the notion of debits and credits. I think we can borrow terminology from Ellerman, where they refer to the two systems as SSS and DSU. That is, single-sided accounts with signed numbers, versus double-sided accounts with unsigned numbers. So if plain text accounting had used DSU, we might have written the above transaction instead as, 2000-01-01 an example transaction debits credits expenses:gas 10 USD assets:cash 10 USD We hope you agree that the SSS version is preferable, and natural to use. If you are trying to translate between an SSS amount or account, and debit/credit terminology, a mnemonic might be as simple as \"debit is positive, credit is negative\". Note that we are implicitly flipping the sign on credit accounts, that is, liabilities, equity and income will typically have negative balances in plain text accounting. Consider that GnuCash docs provide the DSU variant of our accounting equation above, reproduced here. \\text{Assets} + \\text{Expenses} = \\text{Liabilites} + \\text{Equity} + \\text{Income}.","title":"Signed numbers versus debit/credit"},{"location":"wiki/Notes/#equity-and-net-income","text":"There appears to be a discrepancy. Wikipedia writes the accounting equation as, \\text{Assets} = \\text{Liabilites} + \\text{Equity}. So why do our accounting equations above have two extra terms, income and expenses? Wikipedia even writes the following equations, \\begin{align*} \\text{Owner's equity} &= \\text{Contributed Capital} + \\text{Retained Earnings}, \\\\ \\text{Retained Earnings} &= \\text{Net Income} \u2212 \\text{Dividends, and} \\\\ \\text{Net Income} &= \\text{Income} \u2212 \\text{Expenses} \\end{align*} This suggests that income and expenses should be subaccounts to equity. So why do we have them as top-level accounts, or siblings to the equity account? Perhaps this quote from Wikpedia leads us to a possible viewpoint. At the end of that period, the net income (or net loss) at that point is transferred from the Profit and Loss Account to the retained earnings account. Rambaud et al. briefly share an example with this partition of accounts, for equity accounts, permanent accounts, and temporary accounts. A = A_e \\cup A_p \\cup A_t. Then further subdividing temporary accounts into revenue and expenses, A = A_e \\cup A_p \\cup A_{tr} \\cup A_{te}. They go on to suggest \"that the temporary accounts are to be closed and their balances combined and added to the retained earnings account.\" This notion that the top-level, current income and expense accounts are \"temporary\", is repeated in a few more of the links above. The equity is what we expect, every time we close the books. This seems to solve the apparent discrepancy. Wikipedia's version of accounting equation is true again, any time the top-level income and expense accounts are zeroed out.","title":"Equity and net income"},{"location":"wiki/Notes/#zeroing-out-net-income","text":"Let's see how we might do this in text accounting, with an example. Suppose in January, you have the following transactions. 2000-01-01 paycheck assets:checking 10 USD income:employer -10 USD 2000-01-01 rent expenses:rent 5 USD assets:checking -5 USD At the end of January, you might close the books by adding the following transaction, to move profits and losses to retained earnings. 2000-01-31 close 2000-01 income:employer 10 USD expenses:rent -5 USD equity:retained earnings -5 USD Now we can check our balances again. > ledger balance 5 USD assets:checking -5 USD equity:retained earnings -------------------- 0 By closing the books, we have restored the usual accounting equation. That is, for our SSS system in plain text accounting, the following equation is true again. \\text{assets} + \\text{liabilities} + \\text{equity} = 0.","title":"Zeroing out net income"},{"location":"wiki/Notes/#plain-text-accounting-closing","text":"To be continued... (Maybe, plain text accountants don't need the exact same notion of closing books. But I'd like to continue writing this article at a later date, so I will stop my research here, and deploy the article as is for now.) Notes to improve page: Try ledger equity '(income|expenses)' to improve previous section Reseach docs, commits, issue history, for equity/close command","title":"Plain text accounting closing"},{"location":"wiki/SETUP/","text":"A few notes on setting up an environment for cone development go do the flutter install which includes: install flutter install android studio (see android docs if you want to avoid) install an emulator (optional) which includes: some confusing avd stuff go to cone directory and try flutter build apk if your computer has plenty of CPU and RAM, you can probably use an Android emulator, otherwise, try enable adb on your device either use a USB, or get the ip address of your phone and do adb connect <ip-address>:5555 flutter run Linting Use for example, flutter analyze --watch . Screenshots In one terminal, use flutter run , and note the observatory uri. In a second terminal, use flutter screenshot --type=rasterizer --observatory-uri=<uri-from-above> Notes on pushing new version to fdroid run fdroid executable from git fetch upstream, merge master update fdroiddata/metadata/info.tangential.cone.yml https://gitlab.com/fdroid/fdroiddata/blob/master/CONTRIBUTING.md#building-it fdroid checkupdates info.tangential.cone Notes on pushing new version to google play Make sure the app signing keys are available. Do a flutter clean to make sure the app builds cleanly. Then flutter build appbundle. I usually create an internal release, to make sure things install correctly. Then it's more or less a toggle to put it on google play. And I think the total time of waiting is from time of upload to the internal release, so no time is really lost.","title":"SETUP"},{"location":"wiki/SETUP/#a-few-notes-on-setting-up-an-environment-for-cone-development","text":"go do the flutter install which includes: install flutter install android studio (see android docs if you want to avoid) install an emulator (optional) which includes: some confusing avd stuff go to cone directory and try flutter build apk if your computer has plenty of CPU and RAM, you can probably use an Android emulator, otherwise, try enable adb on your device either use a USB, or get the ip address of your phone and do adb connect <ip-address>:5555 flutter run","title":"A few notes on setting up an environment for cone development"},{"location":"wiki/SETUP/#linting","text":"Use for example, flutter analyze --watch .","title":"Linting"},{"location":"wiki/SETUP/#screenshots","text":"In one terminal, use flutter run , and note the observatory uri. In a second terminal, use flutter screenshot --type=rasterizer --observatory-uri=<uri-from-above>","title":"Screenshots"},{"location":"wiki/SETUP/#notes-on-pushing-new-version-to-fdroid","text":"run fdroid executable from git fetch upstream, merge master update fdroiddata/metadata/info.tangential.cone.yml https://gitlab.com/fdroid/fdroiddata/blob/master/CONTRIBUTING.md#building-it fdroid checkupdates info.tangential.cone","title":"Notes on pushing new version to fdroid"},{"location":"wiki/SETUP/#notes-on-pushing-new-version-to-google-play","text":"Make sure the app signing keys are available. Do a flutter clean to make sure the app builds cleanly. Then flutter build appbundle. I usually create an internal release, to make sure things install correctly. Then it's more or less a toggle to put it on google play. And I think the total time of waiting is from time of upload to the internal release, so no time is really lost.","title":"Notes on pushing new version to google play"},{"location":"wiki/TODOs/","text":"TODO soon fix layout of project, with respect to a README, etc lift journal contents to a provider at top of widget tree, before continuing on lifting more business logic out of presentation TODO later a note on some links about locales and amounts https://community.appway.com/screen/kb/article/formatting-integers-according-to-locale-1482810848119 https://www.w3.org/International/wiki/Locale-based_forms https://docs.microsoft.com/en-us/globalization/locale/number-formatting https://docs.oracle.com/cd/E19455-01/806-0169/6j9hsml2h/index.html https://developer.android.com/training/basics/supporting-devices/languages [ ] research Focus widgets, API, in hopes of some simplifications [ ] try SelectableText [ ] try LicensePage widget [ ] try on raw key input to make TAB key work [ ] planning on removing the complicated logic that tries to guess at user's locale for initial value of default currency. it was tangled with the logic to get the locale for language. maybe we can revisit this later with a property call that doesn't require being in the MaterialApp context. [ ] now that we are allowing another mimetype, add heuristics make mimetype viewable by user make contents of file viewable by user, even after the planned changes to homescreen add tests for different line endings, different file encodings, maybe even right to left text experiment with heuristics for reasonable data. parsing the file and finding transactions, etc, is one clue. but if the parsing is only looking for positive results, as we do now, it's not telling us if the ledger file is invalid. we could consider some existing dart tools https://pub.dev/packages/validators https://pub.dev/packages?q=convert [ ] look for idioms for clis written for dart apps https://github.com/dart-lang/sdk/blob/master/runtime/bin/main_options.cc https://github.com/dart-lang/stagehand/blob/master/pubspec.yaml#L22 https://github.com/dart-lang/dartdoc/blob/master/bin/dartdoc.dart#L46 https://github.com/flutter/flutter/blob/master/packages/flutter_tools/bin/flutter_tools.dart#L7 https://github.com/dart-lang/sdk/issues/26578 a little discussion on distributing clis https://github.com/dart-lang/sdk/wiki/Snapshots https://dart.dev/tools/dart-vm#snapshot-option [ ] try flutter snapshots plugin to provide screenshots for fdroid [ ] improve the addition of rows UI [ ] cleanup the date item [ ] try developing on desktop [ ] ensure app works at various [ ] improve logging in java channel [ ] investigate all the methods leading up to the box issue, such as permissions, etc review fdroid build notes https://gitlab.com/fdroid/fdroidserver/issues/511 https://gitlab.com/fdroid/fdroiddata/merge_requests/3739 review the gradle build file [ ] press back twice to leave app from home page [ ] determine if we can specify multiple mime types, or use a heuristic to check if a file contains plain text [ ] refactor append to only look at previous contents, not edit. use trim in transaction's print if needed [ ] add linting workflow suggestions [ ] improve selection of currencies, so users can search if they're not sure the three letter code, for example Mexican Peso is MXN. [ ] add parser code [ ] continue efforts on user configurability of ledger location [ ] add notes on how to add a language to localizations currency issues [ ] make widget resize to that of contained text [ ] qwerty option [ ] decimal separator [ ] combined amount and currency field [ ] transpose amount and currency fields [x] in settings [ ] automatically based on symbol vs name [ ] with drag and drop [ ] with an option in data entry UI [ ] maybe try https://pub.dev/packages/currency_icons or https://pub.dev/packages/country_icons [ ] add tests [ ] start an ios branch [ ] research if there's better logging idioms than print some idiomatic might be described at https://medium.com/flutter-community/debugprint-and-the-power-of-hiding-and-customizing-your-logs-in-dart-86881df05929 [ ] research how fastlane might benefit project in early stages [ ] work on cli, to make working on parser easier [ ] allow user to make templates for faster data entry of common purchases [ ] add localization for Chinese, Russian, as desire is raised [ ] consider details at https://directory.fsf.org/wiki/Free_Software_Directory:Requirements [ ] https://www.gnu.org/licenses/gpl-howto.en.html [ ] fill column [ ] basic offset partially done [ ] clean up code in add transaction form DONE (or partially done) but not yet on master [x] update details of project to that of current flutter create template [ ] refactor repo to contain flutter project, cli project, file parsing project. ensure this refactoring is compatible with f-droid, package managers, etc. [ ] work on parser DONE but not yet on fdroid","title":"TODOs"},{"location":"wiki/TODOs/#todo-soon","text":"fix layout of project, with respect to a README, etc lift journal contents to a provider at top of widget tree, before continuing on lifting more business logic out of presentation","title":"TODO soon"},{"location":"wiki/TODOs/#todo-later","text":"a note on some links about locales and amounts https://community.appway.com/screen/kb/article/formatting-integers-according-to-locale-1482810848119 https://www.w3.org/International/wiki/Locale-based_forms https://docs.microsoft.com/en-us/globalization/locale/number-formatting https://docs.oracle.com/cd/E19455-01/806-0169/6j9hsml2h/index.html https://developer.android.com/training/basics/supporting-devices/languages [ ] research Focus widgets, API, in hopes of some simplifications [ ] try SelectableText [ ] try LicensePage widget [ ] try on raw key input to make TAB key work [ ] planning on removing the complicated logic that tries to guess at user's locale for initial value of default currency. it was tangled with the logic to get the locale for language. maybe we can revisit this later with a property call that doesn't require being in the MaterialApp context. [ ] now that we are allowing another mimetype, add heuristics make mimetype viewable by user make contents of file viewable by user, even after the planned changes to homescreen add tests for different line endings, different file encodings, maybe even right to left text experiment with heuristics for reasonable data. parsing the file and finding transactions, etc, is one clue. but if the parsing is only looking for positive results, as we do now, it's not telling us if the ledger file is invalid. we could consider some existing dart tools https://pub.dev/packages/validators https://pub.dev/packages?q=convert [ ] look for idioms for clis written for dart apps https://github.com/dart-lang/sdk/blob/master/runtime/bin/main_options.cc https://github.com/dart-lang/stagehand/blob/master/pubspec.yaml#L22 https://github.com/dart-lang/dartdoc/blob/master/bin/dartdoc.dart#L46 https://github.com/flutter/flutter/blob/master/packages/flutter_tools/bin/flutter_tools.dart#L7 https://github.com/dart-lang/sdk/issues/26578 a little discussion on distributing clis https://github.com/dart-lang/sdk/wiki/Snapshots https://dart.dev/tools/dart-vm#snapshot-option [ ] try flutter snapshots plugin to provide screenshots for fdroid [ ] improve the addition of rows UI [ ] cleanup the date item [ ] try developing on desktop [ ] ensure app works at various [ ] improve logging in java channel [ ] investigate all the methods leading up to the box issue, such as permissions, etc review fdroid build notes https://gitlab.com/fdroid/fdroidserver/issues/511 https://gitlab.com/fdroid/fdroiddata/merge_requests/3739 review the gradle build file [ ] press back twice to leave app from home page [ ] determine if we can specify multiple mime types, or use a heuristic to check if a file contains plain text [ ] refactor append to only look at previous contents, not edit. use trim in transaction's print if needed [ ] add linting workflow suggestions [ ] improve selection of currencies, so users can search if they're not sure the three letter code, for example Mexican Peso is MXN. [ ] add parser code [ ] continue efforts on user configurability of ledger location [ ] add notes on how to add a language to localizations currency issues [ ] make widget resize to that of contained text [ ] qwerty option [ ] decimal separator [ ] combined amount and currency field [ ] transpose amount and currency fields [x] in settings [ ] automatically based on symbol vs name [ ] with drag and drop [ ] with an option in data entry UI [ ] maybe try https://pub.dev/packages/currency_icons or https://pub.dev/packages/country_icons [ ] add tests [ ] start an ios branch [ ] research if there's better logging idioms than print some idiomatic might be described at https://medium.com/flutter-community/debugprint-and-the-power-of-hiding-and-customizing-your-logs-in-dart-86881df05929 [ ] research how fastlane might benefit project in early stages [ ] work on cli, to make working on parser easier [ ] allow user to make templates for faster data entry of common purchases [ ] add localization for Chinese, Russian, as desire is raised [ ] consider details at https://directory.fsf.org/wiki/Free_Software_Directory:Requirements [ ] https://www.gnu.org/licenses/gpl-howto.en.html [ ] fill column [ ] basic offset","title":"TODO later"},{"location":"wiki/TODOs/#partially-done","text":"[ ] clean up code in add transaction form","title":"partially done"},{"location":"wiki/TODOs/#done-or-partially-done-but-not-yet-on-master","text":"[x] update details of project to that of current flutter create template [ ] refactor repo to contain flutter project, cli project, file parsing project. ensure this refactoring is compatible with f-droid, package managers, etc. [ ] work on parser","title":"DONE (or partially done) but not yet on master"},{"location":"wiki/TODOs/#done-but-not-yet-on-fdroid","text":"","title":"DONE but not yet on fdroid"}]}