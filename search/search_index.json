{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"cone A mobile ledger-like. Run the app from source First, make sure to install Flutter . After that, you can run the app from the root of the project. Replace flutter run with flutter run --flavor=dev . See https://github.com/flutter/flutter/issues/22856. Donate paypal: https://www.paypal.me/bradytrainor bitcoin: 3AVZKz1EFhKzU2wuqZmJzjercKBakRmpAR ethereum: 0x1c99F2E13B9BC204a70dbc8Add54b37Efdf24516","title":"README"},{"location":"#cone","text":"A mobile ledger-like.","title":"cone"},{"location":"#run-the-app-from-source","text":"First, make sure to install Flutter . After that, you can run the app from the root of the project. Replace flutter run with flutter run --flavor=dev . See https://github.com/flutter/flutter/issues/22856.","title":"Run the app from source"},{"location":"#donate","text":"paypal: https://www.paypal.me/bradytrainor bitcoin: 3AVZKz1EFhKzU2wuqZmJzjercKBakRmpAR ethereum: 0x1c99F2E13B9BC204a70dbc8Add54b37Efdf24516","title":"Donate"},{"location":"wiki/Graphs/","text":"pub global activate dcdg dcdg --package ../cone > cone.uml brew install plantuml plantuml -tlatex cone.uml # pdflatex (e.g., MacTeX) pdflatex cone.pdf","title":"Graphs"},{"location":"wiki/Home/","text":"Welcome to the wiki for the cone app. Currently there are TODOs listed at TODOs . Notes on setting up an environment for contributing are at SETUP . Collecting diagrams to visualize the project at Graphs . Similar apps Mobile ledgers . A script for localizations: Localizations .","title":"Home"},{"location":"wiki/Localizations/","text":"Quick script to add a few languages via simple google translate. import 'package:translator/translator.dart'; main(List<String> arguments) async { final translator = GoogleTranslator(); final locales = [ 'de', 'hi', 'in', 'it', 'ja', 'fr', 'th', 'tl', 'zh', ]; var values = <String, String>{ 'addTransaction': 'Add transaction', 'currencyOnLeft': 'Currency on left', 'defaultCurrency': 'Default Currency', 'enterDefaultCurrency': 'Enter default currency', 'ledgerFile': 'Ledger file', 'settings': 'Settings', 'submit': 'Submit', }; Future<String> getForLanguage(String targetLocale) async { String result = '\\'$targetLocale\\': <String, String>{\\n'; for (MapEntry entry in values.entries) { result += ' \\'${entry.key}\\': \\''; result += await translator.translate(entry.value, from: 'en', to: targetLocale); result += '\\',\\n'; } result += '},'; return result; } for (String locale in locales) { print(await getForLanguage(locale)); } }","title":"Localizations"},{"location":"wiki/Mobile-ledgers/","text":"The ecosystem of mobile-friendly plain text ledger apps is very young. Here are some of the projects pushing forward in this frontier. (Similar lists are kept at https://plaintextaccounting.org/#ui-mobile and https://hledger.org/mobile-apps.html .) Beancount Ionic Status: \"This project is currently NOT ready for end-user use!\" Source: https://gitlab.com/alex_ford/beancount-ionic Made with: Typescript , Wikipedia Angular , Wikipedia Ionic , Wikipedia Beancount Mobile Permissions: Read and write to external storage Google Play: https://play.google.com/store/apps/details?id=link.beancount.mobile Source: https://github.com/xuhcc/beancount-mobile Made with: Typescript , Wikipedia Angular , Wikipedia NativeScript , Wikipedia Cashier PWA: https://cashier.alensiljak.eu.org/favourites Source: https://gitlab.com/alensiljak/cashier Made with: Javascript Vue , Wikipedia cone Permissions: None F-Droid: https://f-droid.org/packages/info.tangential.cone/ Google Play: https://play.google.com/store/apps/details?id=info.tangential.cone Source: https://github.com/bradyt/cone/ Made with: Dart , Wikipedia Flutter , Wikipedia Ledger Expense Tracking Status: \"This app is in development. It may be unstable.\" Google Play: https://play.google.com/store/apps/details?id=com.mpease.ledger Source: https://github.com/jduepmeier/ledger-app Made with: Java Android SDK , Wikipedia MoLe Status: \"MoLe is known to work with hledger-web versions 1.10 and 1.14.\" Permissions: Internet F-Droid: https://f-droid.org/en/packages/net.ktnx.mobileledger/ Website: https://mole.ktnx.net Made with: Java Android SDK , Wikipedia","title":"Mobile ledgers"},{"location":"wiki/SETUP/","text":"A few notes on setting up an environment for cone development go do the flutter install which includes: install flutter install android studio (see android docs if you want to avoid) install an emulator (optional) which includes: some confusing avd stuff go to cone directory and try flutter build apk if your computer has plenty of CPU and RAM, you can probably use an Android emulator, otherwise, try enable adb on your device either use a USB, or get the ip address of your phone and do adb connect <ip-address>:5555 flutter run Linting Use for example, flutter analyze --watch . Screenshots In one terminal, use flutter run , and note the observatory uri. In a second terminal, use flutter screenshot --type=rasterizer --observatory-uri=<uri-from-above> Notes on pushing new version to fdroid run fdroid executable from git fetch upstream, merge master update fdroiddata/metadata/info.tangential.cone.yml https://gitlab.com/fdroid/fdroiddata/blob/master/CONTRIBUTING.md#building-it fdroid checkupdates info.tangential.cone Notes on pushing new version to google play Make sure the app signing keys are available. Do a flutter clean to make sure the app builds cleanly. Then flutter build appbundle. I usually create an internal release, to make sure things install correctly. Then it's more or less a toggle to put it on google play. And I think the total time of waiting is from time of upload to the internal release, so no time is really lost.","title":"SETUP"},{"location":"wiki/SETUP/#a-few-notes-on-setting-up-an-environment-for-cone-development","text":"go do the flutter install which includes: install flutter install android studio (see android docs if you want to avoid) install an emulator (optional) which includes: some confusing avd stuff go to cone directory and try flutter build apk if your computer has plenty of CPU and RAM, you can probably use an Android emulator, otherwise, try enable adb on your device either use a USB, or get the ip address of your phone and do adb connect <ip-address>:5555 flutter run","title":"A few notes on setting up an environment for cone development"},{"location":"wiki/SETUP/#linting","text":"Use for example, flutter analyze --watch .","title":"Linting"},{"location":"wiki/SETUP/#screenshots","text":"In one terminal, use flutter run , and note the observatory uri. In a second terminal, use flutter screenshot --type=rasterizer --observatory-uri=<uri-from-above>","title":"Screenshots"},{"location":"wiki/SETUP/#notes-on-pushing-new-version-to-fdroid","text":"run fdroid executable from git fetch upstream, merge master update fdroiddata/metadata/info.tangential.cone.yml https://gitlab.com/fdroid/fdroiddata/blob/master/CONTRIBUTING.md#building-it fdroid checkupdates info.tangential.cone","title":"Notes on pushing new version to fdroid"},{"location":"wiki/SETUP/#notes-on-pushing-new-version-to-google-play","text":"Make sure the app signing keys are available. Do a flutter clean to make sure the app builds cleanly. Then flutter build appbundle. I usually create an internal release, to make sure things install correctly. Then it's more or less a toggle to put it on google play. And I think the total time of waiting is from time of upload to the internal release, so no time is really lost.","title":"Notes on pushing new version to google play"},{"location":"wiki/TODOs/","text":"TODO soon fix layout of project, with respect to a README, etc lift journal contents to a provider at top of widget tree, before continuing on lifting more business logic out of presentation TODO later a note on some links about locales and amounts https://community.appway.com/screen/kb/article/formatting-integers-according-to-locale-1482810848119 https://www.w3.org/International/wiki/Locale-based_forms https://docs.microsoft.com/en-us/globalization/locale/number-formatting https://docs.oracle.com/cd/E19455-01/806-0169/6j9hsml2h/index.html https://developer.android.com/training/basics/supporting-devices/languages [ ] research Focus widgets, API, in hopes of some simplifications [ ] try SelectableText [ ] try LicensePage widget [ ] try on raw key input to make TAB key work [ ] planning on removing the complicated logic that tries to guess at user's locale for initial value of default currency. it was tangled with the logic to get the locale for language. maybe we can revisit this later with a property call that doesn't require being in the MaterialApp context. [ ] now that we are allowing another mimetype, add heuristics make mimetype viewable by user make contents of file viewable by user, even after the planned changes to homescreen add tests for different line endings, different file encodings, maybe even right to left text experiment with heuristics for reasonable data. parsing the file and finding transactions, etc, is one clue. but if the parsing is only looking for positive results, as we do now, it's not telling us if the ledger file is invalid. we could consider some existing dart tools https://pub.dev/packages/validators https://pub.dev/packages?q=convert [ ] look for idioms for clis written for dart apps https://github.com/dart-lang/sdk/blob/master/runtime/bin/main_options.cc https://github.com/dart-lang/stagehand/blob/master/pubspec.yaml#L22 https://github.com/dart-lang/dartdoc/blob/master/bin/dartdoc.dart#L46 https://github.com/flutter/flutter/blob/master/packages/flutter_tools/bin/flutter_tools.dart#L7 https://github.com/dart-lang/sdk/issues/26578 a little discussion on distributing clis https://github.com/dart-lang/sdk/wiki/Snapshots https://dart.dev/tools/dart-vm#snapshot-option [ ] try flutter snapshots plugin to provide screenshots for fdroid [ ] improve the addition of rows UI [ ] cleanup the date item [ ] try developing on desktop [ ] ensure app works at various [ ] improve logging in java channel [ ] investigate all the methods leading up to the box issue, such as permissions, etc review fdroid build notes https://gitlab.com/fdroid/fdroidserver/issues/511 https://gitlab.com/fdroid/fdroiddata/merge_requests/3739 review the gradle build file [ ] press back twice to leave app from home page [ ] determine if we can specify multiple mime types, or use a heuristic to check if a file contains plain text [ ] refactor append to only look at previous contents, not edit. use trim in transaction's print if needed [ ] add linting workflow suggestions [ ] improve selection of currencies, so users can search if they're not sure the three letter code, for example Mexican Peso is MXN. [ ] add parser code [ ] continue efforts on user configurability of ledger location [ ] add notes on how to add a language to localizations currency issues [ ] make widget resize to that of contained text [ ] qwerty option [ ] decimal separator [ ] combined amount and currency field [ ] transpose amount and currency fields [x] in settings [ ] automatically based on symbol vs name [ ] with drag and drop [ ] with an option in data entry UI [ ] maybe try https://pub.dev/packages/currency_icons or https://pub.dev/packages/country_icons [ ] add tests [ ] start an ios branch [ ] research if there's better logging idioms than print some idiomatic might be described at https://medium.com/flutter-community/debugprint-and-the-power-of-hiding-and-customizing-your-logs-in-dart-86881df05929 [ ] research how fastlane might benefit project in early stages [ ] work on cli, to make working on parser easier [ ] allow user to make templates for faster data entry of common purchases [ ] add localization for Chinese, Russian, as desire is raised [ ] consider details at https://directory.fsf.org/wiki/Free_Software_Directory:Requirements [ ] https://www.gnu.org/licenses/gpl-howto.en.html [ ] fill column [ ] basic offset partially done [ ] clean up code in add transaction form DONE (or partially done) but not yet on master [x] update details of project to that of current flutter create template [ ] refactor repo to contain flutter project, cli project, file parsing project. ensure this refactoring is compatible with f-droid, package managers, etc. [ ] work on parser DONE but not yet on fdroid","title":"TODOs"},{"location":"wiki/TODOs/#todo-soon","text":"fix layout of project, with respect to a README, etc lift journal contents to a provider at top of widget tree, before continuing on lifting more business logic out of presentation","title":"TODO soon"},{"location":"wiki/TODOs/#todo-later","text":"a note on some links about locales and amounts https://community.appway.com/screen/kb/article/formatting-integers-according-to-locale-1482810848119 https://www.w3.org/International/wiki/Locale-based_forms https://docs.microsoft.com/en-us/globalization/locale/number-formatting https://docs.oracle.com/cd/E19455-01/806-0169/6j9hsml2h/index.html https://developer.android.com/training/basics/supporting-devices/languages [ ] research Focus widgets, API, in hopes of some simplifications [ ] try SelectableText [ ] try LicensePage widget [ ] try on raw key input to make TAB key work [ ] planning on removing the complicated logic that tries to guess at user's locale for initial value of default currency. it was tangled with the logic to get the locale for language. maybe we can revisit this later with a property call that doesn't require being in the MaterialApp context. [ ] now that we are allowing another mimetype, add heuristics make mimetype viewable by user make contents of file viewable by user, even after the planned changes to homescreen add tests for different line endings, different file encodings, maybe even right to left text experiment with heuristics for reasonable data. parsing the file and finding transactions, etc, is one clue. but if the parsing is only looking for positive results, as we do now, it's not telling us if the ledger file is invalid. we could consider some existing dart tools https://pub.dev/packages/validators https://pub.dev/packages?q=convert [ ] look for idioms for clis written for dart apps https://github.com/dart-lang/sdk/blob/master/runtime/bin/main_options.cc https://github.com/dart-lang/stagehand/blob/master/pubspec.yaml#L22 https://github.com/dart-lang/dartdoc/blob/master/bin/dartdoc.dart#L46 https://github.com/flutter/flutter/blob/master/packages/flutter_tools/bin/flutter_tools.dart#L7 https://github.com/dart-lang/sdk/issues/26578 a little discussion on distributing clis https://github.com/dart-lang/sdk/wiki/Snapshots https://dart.dev/tools/dart-vm#snapshot-option [ ] try flutter snapshots plugin to provide screenshots for fdroid [ ] improve the addition of rows UI [ ] cleanup the date item [ ] try developing on desktop [ ] ensure app works at various [ ] improve logging in java channel [ ] investigate all the methods leading up to the box issue, such as permissions, etc review fdroid build notes https://gitlab.com/fdroid/fdroidserver/issues/511 https://gitlab.com/fdroid/fdroiddata/merge_requests/3739 review the gradle build file [ ] press back twice to leave app from home page [ ] determine if we can specify multiple mime types, or use a heuristic to check if a file contains plain text [ ] refactor append to only look at previous contents, not edit. use trim in transaction's print if needed [ ] add linting workflow suggestions [ ] improve selection of currencies, so users can search if they're not sure the three letter code, for example Mexican Peso is MXN. [ ] add parser code [ ] continue efforts on user configurability of ledger location [ ] add notes on how to add a language to localizations currency issues [ ] make widget resize to that of contained text [ ] qwerty option [ ] decimal separator [ ] combined amount and currency field [ ] transpose amount and currency fields [x] in settings [ ] automatically based on symbol vs name [ ] with drag and drop [ ] with an option in data entry UI [ ] maybe try https://pub.dev/packages/currency_icons or https://pub.dev/packages/country_icons [ ] add tests [ ] start an ios branch [ ] research if there's better logging idioms than print some idiomatic might be described at https://medium.com/flutter-community/debugprint-and-the-power-of-hiding-and-customizing-your-logs-in-dart-86881df05929 [ ] research how fastlane might benefit project in early stages [ ] work on cli, to make working on parser easier [ ] allow user to make templates for faster data entry of common purchases [ ] add localization for Chinese, Russian, as desire is raised [ ] consider details at https://directory.fsf.org/wiki/Free_Software_Directory:Requirements [ ] https://www.gnu.org/licenses/gpl-howto.en.html [ ] fill column [ ] basic offset","title":"TODO later"},{"location":"wiki/TODOs/#partially-done","text":"[ ] clean up code in add transaction form","title":"partially done"},{"location":"wiki/TODOs/#done-or-partially-done-but-not-yet-on-master","text":"[x] update details of project to that of current flutter create template [ ] refactor repo to contain flutter project, cli project, file parsing project. ensure this refactoring is compatible with f-droid, package managers, etc. [ ] work on parser","title":"DONE (or partially done) but not yet on master"},{"location":"wiki/TODOs/#done-but-not-yet-on-fdroid","text":"","title":"DONE but not yet on fdroid"}]}